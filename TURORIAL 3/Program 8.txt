Q.8) Write a GUI-based program that plays a guess-the-number game in which the user guesses a number between 1 and 100 and the computer provides the responses. The window should display the user’s guesses with a label by saying, “Too large, try again,” or “Too small, try again.” When the user finally guesses the correct number, the program congratulates him and tells him the total number of guesses

import tkinter as tk
from tkinter import messagebox
import random

class GuessTheNumber:
    def __init__(self, root):
        self.root = root
        self.root.title("Guess The Number Game")
        
        self.secret_number = random.randint(1, 100)
        self.guesses = 0
        
        self.label = tk.Label(root, text="Guess a number between 1 and 100:")
        self.label.pack(pady=10)
        
        self.entry = tk.Entry(root)
        self.entry.pack(pady=10)
        
        self.submit_button = tk.Button(root, text="Submit Guess", command=self.check_guess)
        self.submit_button.pack(pady=10)
        
        self.result_label = tk.Label(root, text="")
        self.result_label.pack(pady=10)
        
    def check_guess(self):
        try:
            guess = int(self.entry.get())
            self.guesses += 1
            
            if guess < 1 or guess > 100:
                self.result_label.config(text="Please enter a number between 1 and 100.")
                return
            
            if guess < self.secret_number:
                self.result_label.config(text="Too small, try again.")
            elif guess > self.secret_number:
                self.result_label.config(text="Too large, try again.")
            else:
                messagebox.showinfo("Congratulations!", f"You guessed the correct number {self.secret_number} in {self.guesses} guesses!")
                self.reset_game()
        except ValueError:
            self.result_label.config(text="Invalid input. Please enter a valid number.")
    
    def reset_game(self):
        self.secret_number = random.randint(1, 100)
        self.guesses = 0
        self.result_label.config(text="")
        self.entry.delete(0, tk.END)

if __name__ == "__main__":
    root = tk.Tk()
    game = GuessTheNumber(root)
    root.mainloop()